{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","Glamor","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","createElement","title","Layout","_ref","children","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","_header__WEBPACK_IMPORTED_MODULE_4__","siteTitle","site","siteMetadata","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","gatsby__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","Header","background","marginBottom","to","color","textDecoration","string","defaultProps","SEO","description","lang","meta","keywords","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","array","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,SAAAC,GAAAH,EAAA,OAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAaeM,UARM,kBACnBH,EAAAI,cAACH,EAAA,EAAD,KACED,EAAAI,cAACF,EAAA,EAAD,CAAKG,MAAM,mBACXL,EAAAI,cAAA,uBACAJ,EAAAI,cAAA,qMCKEE,UAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbR,EAAAI,cAACK,EAAA,YAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVZ,EAAAI,cAAAS,EAAAC,EAAAC,SAAA,KACEf,EAAAI,cAACY,EAAA,EAAD,CAAQC,UAAWL,EAAKM,KAAKC,aAAad,QAC1CL,EAAAI,cAAA,OACEgB,MAAO,CACLC,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPC,WAAY,IAGdxB,EAAAI,cAAA,YAAOI,GACPR,EAAAI,cAAA,oBACK,IAAIqB,MAAOC,cADhB,mBAGE1B,EAAAI,cAAA,KAAGuB,KAAK,4BAAR,cAzBVf,KAAAgB,MAiCFtB,EAAOuB,UAAY,CACjBrB,SAAUsB,IAAUC,KAAKC,YAGZ1B,0KCpDf,SAAAN,GAAA,IAAAiC,EAAApC,EAAA,IAAAqC,EAAArC,EAAA,GAAAsC,EAAAtC,EAAAuC,EAAAF,GAIMG,GAJNxC,EAAA,GAIe,SAAAU,GAAA,IAAGU,EAAHV,EAAGU,UAAH,OACbjB,EAAAI,cAAA,UACEgB,MAAO,CACLkB,WAAU,gBACVC,aAAY,YAGdvC,EAAAI,cAAA,OACEgB,MAAO,CACLC,OAAM,SACNC,SAAU,IACVC,QAAO,sBAGTvB,EAAAI,cAAA,MAAIgB,MAAO,CAAEC,OAAQ,IACnBrB,EAAAI,cAAC6B,EAAA,KAAD,CACEO,GAAG,IACHpB,MAAO,CACLqB,MAAK,QACLC,eAAc,SAGfzB,QAOXoB,EAAOR,UAAY,CACjBZ,UAAWa,IAAUa,QAGvBN,EAAOO,aAAe,CACpB3B,UAAS,IAGIoB,8HC7Bf,SAASQ,EAATtC,GAA2D,IAA5CuC,EAA4CvC,EAA5CuC,YAAaC,EAA+BxC,EAA/BwC,KAAMC,EAAyBzC,EAAzByC,KAAMC,EAAmB1C,EAAnB0C,SAAU5C,EAASE,EAATF,MACxCa,EADiDgC,EAAAtC,KACjDM,KAYFiC,EAAkBL,GAAe5B,EAAKC,aAAa2B,YAEzD,OACE9C,EAAAI,cAACgD,EAAAtC,EAAD,CACEuC,eAAgB,CACdN,QAEF1C,MAAOA,EACPiD,cAAa,QAAUpC,EAAKC,aAAad,MACzC2C,KAAM,CACJ,CACEO,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASnD,GAEX,CACEoD,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAStC,EAAKC,aAAauC,QAE7B,CACEH,KAAI,gBACJC,QAASnD,GAEX,CACEkD,KAAI,sBACJC,QAASL,IAGVQ,OACCV,EAASW,OAAS,EACd,CACEL,KAAI,WACJC,QAASP,EAASY,KAAT,OAEX,IAELF,OAAOX,KAKhBH,EAAID,aAAe,CACjBG,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAIhB,UAAY,CACdiB,YAAahB,IAAUa,OACvBI,KAAMjB,IAAUa,OAChBK,KAAMlB,IAAUgC,MAChBb,SAAUnB,IAAUiC,QAAQjC,IAAUa,QACtCtC,MAAOyB,IAAUa,OAAOX,YAGXa","file":"component---src-pages-404-js-3154910f9e180a128e55.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}